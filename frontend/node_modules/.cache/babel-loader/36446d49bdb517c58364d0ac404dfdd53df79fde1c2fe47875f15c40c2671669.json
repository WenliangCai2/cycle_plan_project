{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiwenliang\\\\Desktop\\\\Course\\\\courseWork\\\\cycle_web\\\\src\\\\RestaurantList.js\";\nimport React from 'react';\n\n// Restaurant physical components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RestaurantEntity(props) {\n  const {\n    data,\n    isSelected,\n    onClickHandler\n  } = props;\n\n  // Processing click event\n  const handleClick = () => {\n    onClickHandler(data.location);\n  };\n\n  // Style of restaurant entry\n  const entryStyle = {\n    display: \"inline-block\",\n    padding: \"10px\",\n    margin: \"5px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: isSelected ? '#e3f2fd' : 'white',\n    // the color when choose\n    transition: 'background-color 0.3s ease' // Add transition effect\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: entryStyle,\n    onClick: handleClick,\n    children: [data.name, \" \", isSelected && '✓', \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = RestaurantEntity;\nfunction RestaurantList(props) {\n  const {\n    list,\n    selectedLocations,\n    onClickHandler\n  } = props;\n  const restaurantEntries = list.map(entry => {\n    const isSelected = selectedLocations.some(location => location.lat === entry.location.lat && location.lng === entry.location.lng);\n    return /*#__PURE__*/_jsxDEV(RestaurantEntity, {\n      // Use the restaurant name as a unique key\n      data: entry,\n      isSelected: isSelected,\n      onClickHandler: onClickHandler\n    }, entry.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  });\n\n  // Restaurant list container style\n  const listStyle = {\n    display: 'grid',\n    gap: '8px',\n    // Spacing between entries\n    padding: '10px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: '#f9f9f9'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"restaurant-list\",\n    style: listStyle,\n    children: restaurantEntries\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_c2 = RestaurantList;\nexport default RestaurantList;\nvar _c, _c2;\n$RefreshReg$(_c, \"RestaurantEntity\");\n$RefreshReg$(_c2, \"RestaurantList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RestaurantEntity","props","data","isSelected","onClickHandler","handleClick","location","entryStyle","display","padding","margin","border","borderRadius","cursor","backgroundColor","transition","style","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","RestaurantList","list","selectedLocations","restaurantEntries","map","entry","some","lat","lng","listStyle","gap","id","_c2","$RefreshReg$"],"sources":["C:/Users/caiwenliang/Desktop/Course/courseWork/cycle_web/src/RestaurantList.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Restaurant physical components\r\nfunction RestaurantEntity(props) {\r\n    const { data, isSelected, onClickHandler } = props;\r\n\r\n    // Processing click event\r\n    const handleClick = () => {\r\n        onClickHandler(data.location);\r\n    };\r\n\r\n    // Style of restaurant entry\r\n    const entryStyle = {\r\n        display: \"inline-block\",\r\n        padding: \"10px\",\r\n        margin: \"5px\",\r\n        border: \"1px solid #ddd\",\r\n        borderRadius: \"5px\",\r\n        cursor: \"pointer\",\r\n        backgroundColor: isSelected ? '#e3f2fd' : 'white', // the color when choose\r\n        transition: 'background-color 0.3s ease', // Add transition effect\r\n    };\r\n\r\n    return (\r\n        <div style={entryStyle} onClick={handleClick}>\r\n            {data.name} {isSelected && '✓'} {/* A checkmark is displayed when selected */}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RestaurantList(props) {\r\n    const { list, selectedLocations, onClickHandler } = props;\r\n\r\n    const restaurantEntries = list.map((entry) => {\r\n        const isSelected = selectedLocations.some(\r\n            (location) =>\r\n                location.lat === entry.location.lat &&\r\n                location.lng === entry.location.lng\r\n        );\r\n\r\n        return (\r\n            <RestaurantEntity\r\n                key={entry.name} // Use the restaurant name as a unique key\r\n                data={entry}\r\n                isSelected={isSelected}\r\n                onClickHandler={onClickHandler}\r\n            />\r\n        );\r\n    });\r\n\r\n    // Restaurant list container style\r\n    const listStyle = {\r\n        display: 'grid',\r\n        gap: '8px', // Spacing between entries\r\n        padding: '10px',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '8px',\r\n        backgroundColor: '#f9f9f9',\r\n    };\r\n\r\n    return (\r\n        <div id=\"restaurant-list\" style={listStyle}>\r\n            {restaurantEntries}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RestaurantList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EAC7B,MAAM;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAe,CAAC,GAAGH,KAAK;;EAElD;EACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtBD,cAAc,CAACF,IAAI,CAACI,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG;IACfC,OAAO,EAAE,cAAc;IACvBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,SAAS;IACjBC,eAAe,EAAEX,UAAU,GAAG,SAAS,GAAG,OAAO;IAAE;IACnDY,UAAU,EAAE,4BAA4B,CAAE;EAC9C,CAAC;EAED,oBACIhB,OAAA;IAAKiB,KAAK,EAAET,UAAW;IAACU,OAAO,EAAEZ,WAAY;IAAAa,QAAA,GACxChB,IAAI,CAACiB,IAAI,EAAC,GAAC,EAAChB,UAAU,IAAI,GAAG,EAAC,GAAC;EAAA;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAACC,EAAA,GAzBQxB,gBAAgB;AA2BzB,SAASyB,cAAcA,CAACxB,KAAK,EAAE;EAC3B,MAAM;IAAEyB,IAAI;IAAEC,iBAAiB;IAAEvB;EAAe,CAAC,GAAGH,KAAK;EAEzD,MAAM2B,iBAAiB,GAAGF,IAAI,CAACG,GAAG,CAAEC,KAAK,IAAK;IAC1C,MAAM3B,UAAU,GAAGwB,iBAAiB,CAACI,IAAI,CACpCzB,QAAQ,IACLA,QAAQ,CAAC0B,GAAG,KAAKF,KAAK,CAACxB,QAAQ,CAAC0B,GAAG,IACnC1B,QAAQ,CAAC2B,GAAG,KAAKH,KAAK,CAACxB,QAAQ,CAAC2B,GACxC,CAAC;IAED,oBACIlC,OAAA,CAACC,gBAAgB;MACI;MACjBE,IAAI,EAAE4B,KAAM;MACZ3B,UAAU,EAAEA,UAAW;MACvBC,cAAc,EAAEA;IAAe,GAH1B0B,KAAK,CAACX,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIlB,CAAC;EAEV,CAAC,CAAC;;EAEF;EACA,MAAMW,SAAS,GAAG;IACd1B,OAAO,EAAE,MAAM;IACf2B,GAAG,EAAE,KAAK;IAAE;IACZ1B,OAAO,EAAE,MAAM;IACfE,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBE,eAAe,EAAE;EACrB,CAAC;EAED,oBACIf,OAAA;IAAKqC,EAAE,EAAC,iBAAiB;IAACpB,KAAK,EAAEkB,SAAU;IAAAhB,QAAA,EACtCU;EAAiB;IAAAR,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd;AAACc,GAAA,GAnCQZ,cAAc;AAqCvB,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}