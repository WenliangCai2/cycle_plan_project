{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiwenliang\\\\PycharmProjects\\\\React-Flask-demo2\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport H from '@here/maps-api-for-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  _s();\n  const mapRef = useRef(null);\n  const map = useRef(null);\n  const platform = useRef(null);\n  const {\n    apikey,\n    userPosition,\n    selectedLocations,\n    onMapClick,\n    customPoints,\n    restaurantList\n  } = props;\n  useEffect(() => {\n    var _map$current, _map$current2;\n    if (!map.current) {\n      // Initialize map\n      platform.current = new H.service.Platform({\n        apikey\n      });\n      const defaultLayers = platform.current.createDefaultLayers({\n        pois: true\n      });\n      const newMap = new H.Map(mapRef.current, defaultLayers.vector.normal.map, {\n        zoom: 14,\n        center: userPosition // Use dynamic user locations\n      });\n\n      // Add map click event listener\n      newMap.addEventListener('tap', evt => {\n        const coord = newMap.screenToGeo(evt.currentPointer.viewportX, evt.currentPointer.viewportY);\n        console.log('Map clicked:', coord.lat, coord.lng); // 添加日志\n        if (onMapClick) {\n          onMapClick(coord.lat, coord.lng);\n        }\n      });\n      new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\n      H.ui.UI.createDefault(newMap, defaultLayers);\n      map.current = newMap;\n    }\n\n    // Clear all objects on the map\n    (_map$current = map.current) === null || _map$current === void 0 ? void 0 : _map$current.removeObjects(map.current.getObjects());\n\n    // Add user position marker\n    (_map$current2 = map.current) === null || _map$current2 === void 0 ? void 0 : _map$current2.addObject(new H.map.Marker(userPosition, {\n      icon: getMarkerIcon('red') // 用户位置\n    }));\n\n    // Add predefined restaurant markers\n    restaurantList.forEach(restaurant => {\n      var _map$current3;\n      (_map$current3 = map.current) === null || _map$current3 === void 0 ? void 0 : _map$current3.addObject(new H.map.Marker(restaurant.location, {\n        icon: getMarkerIcon('blue') // 事先定义好的点\n      }));\n    });\n\n    // Add custom points markers\n    customPoints.forEach(point => {\n      var _map$current4;\n      (_map$current4 = map.current) === null || _map$current4 === void 0 ? void 0 : _map$current4.addObject(new H.map.Marker(point.location, {\n        icon: getMarkerIcon('purple') // 自定义点\n      }));\n    });\n\n    // Routes are calculated when the selected location changes\n    if (selectedLocations.length > 0) {\n      calculateRoute(platform.current, map.current, userPosition, selectedLocations);\n    }\n  }, [apikey, userPosition, selectedLocations, customPoints, onMapClick, restaurantList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n\n// Get tag icon\n_s(Map, \"xsT/F+AWmDZ03OBlNxNGHBv3aM4=\");\n_c = Map;\nfunction getMarkerIcon(color) {\n  const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"marker\">\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\n                </g></svg>`;\n  return new H.map.Icon(svgCircle, {\n    anchor: {\n      x: 10,\n      y: 10\n    }\n  });\n}\n\n// Calculation route\nfunction calculateRoute(platform, map, start, waypoints) {\n  // 使用最新版本的路由API\n  const router = platform.getRoutingService(null, 8);\n\n  // 处理路线规划请求\n  if (waypoints.length === 0) {\n    console.error('No waypoints provided for route calculation');\n    return;\n  }\n  try {\n    // 创建一个新的请求参数对象\n    const routeRequestParams = {\n      routingMode: 'fast',\n      transportMode: 'pedestrian',\n      origin: `${start.lat},${start.lng}`,\n      destination: `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`,\n      return: 'polyline,summary'\n    };\n\n    // 处理中间点\n    if (waypoints.length > 1) {\n      // 创建单独的via参数数组\n      routeRequestParams.via = [];\n      // 不包括终点\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        const wp = waypoints[i];\n        routeRequestParams.via.push(`${wp.lat},${wp.lng}`);\n      }\n    }\n    console.log('路线规划请求参数:', routeRequestParams);\n\n    // 调用路由服务\n    router.calculateRoute(routeRequestParams, onRouteSuccess, onRouteError);\n  } catch (error) {\n    console.error('创建路线请求失败:', error);\n    alert('创建路线请求失败，请稍后再试');\n  }\n\n  // 成功处理路线响应\n  function onRouteSuccess(response) {\n    try {\n      console.log('路线规划响应:', response);\n      if (response.routes && response.routes.length > 0) {\n        const sections = response.routes[0].sections;\n        if (!sections || sections.length === 0) {\n          console.error('路线响应中没有部分数据');\n          return;\n        }\n        const lineStrings = sections.map(section => {\n          if (!section.polyline) {\n            console.error('部分响应中没有polyline数据:', section);\n            return null;\n          }\n          return H.geo.LineString.fromFlexiblePolyline(section.polyline);\n        }).filter(Boolean);\n        if (lineStrings.length === 0) {\n          console.error('无法创建路线线条');\n          return;\n        }\n        const multiLineString = new H.geo.MultiLineString(lineStrings);\n        const bounds = multiLineString.getBoundingBox();\n\n        // 创建路线折线\n        const routePolyline = new H.map.Polyline(multiLineString, {\n          style: {\n            lineWidth: 5,\n            strokeColor: 'rgba(0, 128, 255, 0.7)'\n          }\n        });\n\n        // 清除地图上的所有对象\n        map.removeObjects(map.getObjects());\n\n        // 添加路线折线\n        map.addObject(routePolyline);\n\n        // 添加标记\n        const markers = [new H.map.Marker(start, {\n          icon: getMarkerIcon('red')\n        }) // 用户位置\n        ];\n        waypoints.forEach((point, index) => {\n          markers.push(new H.map.Marker(point, {\n            icon: getMarkerIcon(index === waypoints.length - 1 ? 'green' : 'blue' // 终点绿色，途径点蓝色\n            )\n          }));\n        });\n\n        // 添加所有标记到地图\n        map.addObjects(markers);\n\n        // 调整地图视角以包含所有标记和路线\n        map.getViewModel().setLookAtData({\n          bounds\n        });\n      } else {\n        console.error('响应中无路线数据:', response);\n        alert('无法规划路线，请尝试选择其他位置');\n      }\n    } catch (error) {\n      console.error('处理路线响应时出错:', error);\n      alert('处理路线数据时出错');\n    }\n  }\n\n  // 处理路线错误\n  function onRouteError(error) {\n    console.error('路线规划失败:', error);\n\n    // 提取错误信息\n    let errorMessage = '路线规划失败';\n    if (error && error.cause) {\n      errorMessage += '：' + error.cause;\n    }\n    alert(errorMessage);\n  }\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","H","jsxDEV","_jsxDEV","Map","props","_s","mapRef","map","platform","apikey","userPosition","selectedLocations","onMapClick","customPoints","restaurantList","_map$current","_map$current2","current","service","Platform","defaultLayers","createDefaultLayers","pois","newMap","vector","normal","zoom","center","addEventListener","evt","coord","screenToGeo","currentPointer","viewportX","viewportY","console","log","lat","lng","mapevents","Behavior","MapEvents","ui","UI","createDefault","removeObjects","getObjects","addObject","Marker","icon","getMarkerIcon","forEach","restaurant","_map$current3","location","point","_map$current4","length","calculateRoute","style","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","color","svgCircle","Icon","anchor","x","y","start","waypoints","router","getRoutingService","error","routeRequestParams","routingMode","transportMode","origin","destination","return","via","i","wp","push","onRouteSuccess","onRouteError","alert","response","routes","sections","lineStrings","section","polyline","geo","LineString","fromFlexiblePolyline","filter","Boolean","multiLineString","MultiLineString","bounds","getBoundingBox","routePolyline","Polyline","lineWidth","strokeColor","markers","index","addObjects","getViewModel","setLookAtData","errorMessage","cause","$RefreshReg$"],"sources":["C:/Users/caiwenliang/PycharmProjects/React-Flask-demo2/frontend/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport H from '@here/maps-api-for-javascript';\r\n\r\nconst Map = (props) => {\r\n    const mapRef = useRef(null);\r\n    const map = useRef(null);\r\n    const platform = useRef(null);\r\n    const { apikey, userPosition, selectedLocations, onMapClick, customPoints, restaurantList } = props;\r\n\r\n    useEffect(() => {\r\n        if (!map.current) {\r\n            // Initialize map\r\n            platform.current = new H.service.Platform({ apikey });\r\n            const defaultLayers = platform.current.createDefaultLayers({ pois: true });\r\n            const newMap = new H.Map(\r\n                mapRef.current,\r\n                defaultLayers.vector.normal.map,\r\n                {\r\n                    zoom: 14,\r\n                    center: userPosition, // Use dynamic user locations\r\n                }\r\n            );\r\n\r\n            // Add map click event listener\r\n            newMap.addEventListener('tap', (evt) => {\r\n                const coord = newMap.screenToGeo(evt.currentPointer.viewportX, evt.currentPointer.viewportY);\r\n                console.log('Map clicked:', coord.lat, coord.lng); // 添加日志\r\n                if (onMapClick) {\r\n                    onMapClick(coord.lat, coord.lng);\r\n                }\r\n            });\r\n\r\n            new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\r\n            H.ui.UI.createDefault(newMap, defaultLayers);\r\n            map.current = newMap;\r\n        }\r\n\r\n        // Clear all objects on the map\r\n        map.current?.removeObjects(map.current.getObjects());\r\n\r\n        // Add user position marker\r\n        map.current?.addObject(\r\n            new H.map.Marker(userPosition, {\r\n                icon: getMarkerIcon('red') // 用户位置\r\n            })\r\n        );\r\n\r\n        // Add predefined restaurant markers\r\n        restaurantList.forEach(restaurant => {\r\n            map.current?.addObject(\r\n                new H.map.Marker(restaurant.location, {\r\n                    icon: getMarkerIcon('blue') // 事先定义好的点\r\n                })\r\n            );\r\n        });\r\n\r\n        // Add custom points markers\r\n        customPoints.forEach(point => {\r\n            map.current?.addObject(\r\n                new H.map.Marker(point.location, {\r\n                    icon: getMarkerIcon('purple') // 自定义点\r\n                })\r\n            );\r\n        });\r\n\r\n        // Routes are calculated when the selected location changes\r\n        if (selectedLocations.length > 0) {\r\n            calculateRoute(\r\n                platform.current,\r\n                map.current,\r\n                userPosition,\r\n                selectedLocations\r\n            );\r\n        }\r\n    }, [apikey, userPosition, selectedLocations, customPoints, onMapClick, restaurantList]);\r\n\r\n    return <div style={{ width: '100%', height: '500px' }} ref={mapRef} />;\r\n};\r\n\r\n// Get tag icon\r\nfunction getMarkerIcon(color) {\r\n    const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g id=\"marker\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\r\n                </g></svg>`;\r\n    return new H.map.Icon(svgCircle, {\r\n        anchor: { x: 10, y: 10 }\r\n    });\r\n}\r\n\r\n// Calculation route\r\nfunction calculateRoute(platform, map, start, waypoints) {\r\n    // 使用最新版本的路由API\r\n    const router = platform.getRoutingService(null, 8);\r\n\r\n    // 处理路线规划请求\r\n    if (waypoints.length === 0) {\r\n        console.error('No waypoints provided for route calculation');\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // 创建一个新的请求参数对象\r\n        const routeRequestParams = {\r\n            routingMode: 'fast',\r\n            transportMode: 'pedestrian',\r\n            origin: `${start.lat},${start.lng}`,\r\n            destination: `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`,\r\n            return: 'polyline,summary'\r\n        };\r\n\r\n        // 处理中间点\r\n        if (waypoints.length > 1) {\r\n            // 创建单独的via参数数组\r\n            routeRequestParams.via = [];\r\n            // 不包括终点\r\n            for (let i = 0; i < waypoints.length - 1; i++) {\r\n                const wp = waypoints[i];\r\n                routeRequestParams.via.push(`${wp.lat},${wp.lng}`);\r\n            }\r\n        }\r\n\r\n        console.log('路线规划请求参数:', routeRequestParams);\r\n\r\n        // 调用路由服务\r\n        router.calculateRoute(\r\n            routeRequestParams,\r\n            onRouteSuccess,\r\n            onRouteError\r\n        );\r\n    } catch (error) {\r\n        console.error('创建路线请求失败:', error);\r\n        alert('创建路线请求失败，请稍后再试');\r\n    }\r\n\r\n    // 成功处理路线响应\r\n    function onRouteSuccess(response) {\r\n        try {\r\n            console.log('路线规划响应:', response);\r\n            \r\n            if (response.routes && response.routes.length > 0) {\r\n                const sections = response.routes[0].sections;\r\n                \r\n                if (!sections || sections.length === 0) {\r\n                    console.error('路线响应中没有部分数据');\r\n                    return;\r\n                }\r\n                \r\n                const lineStrings = sections.map(section => {\r\n                    if (!section.polyline) {\r\n                        console.error('部分响应中没有polyline数据:', section);\r\n                        return null;\r\n                    }\r\n                    return H.geo.LineString.fromFlexiblePolyline(section.polyline);\r\n                }).filter(Boolean);\r\n                \r\n                if (lineStrings.length === 0) {\r\n                    console.error('无法创建路线线条');\r\n                    return;\r\n                }\r\n                \r\n                const multiLineString = new H.geo.MultiLineString(lineStrings);\r\n                const bounds = multiLineString.getBoundingBox();\r\n\r\n                // 创建路线折线\r\n                const routePolyline = new H.map.Polyline(multiLineString, {\r\n                    style: {\r\n                        lineWidth: 5,\r\n                        strokeColor: 'rgba(0, 128, 255, 0.7)'\r\n                    }\r\n                });\r\n\r\n                // 清除地图上的所有对象\r\n                map.removeObjects(map.getObjects());\r\n\r\n                // 添加路线折线\r\n                map.addObject(routePolyline);\r\n\r\n                // 添加标记\r\n                const markers = [\r\n                    new H.map.Marker(start, { icon: getMarkerIcon('red') }) // 用户位置\r\n                ];\r\n                \r\n                waypoints.forEach((point, index) => {\r\n                    markers.push(\r\n                        new H.map.Marker(point, {\r\n                            icon: getMarkerIcon(\r\n                                index === waypoints.length - 1 ? 'green' : 'blue' // 终点绿色，途径点蓝色\r\n                            )\r\n                        })\r\n                    );\r\n                });\r\n\r\n                // 添加所有标记到地图\r\n                map.addObjects(markers);\r\n\r\n                // 调整地图视角以包含所有标记和路线\r\n                map.getViewModel().setLookAtData({ bounds });\r\n            } else {\r\n                console.error('响应中无路线数据:', response);\r\n                alert('无法规划路线，请尝试选择其他位置');\r\n            }\r\n        } catch (error) {\r\n            console.error('处理路线响应时出错:', error);\r\n            alert('处理路线数据时出错');\r\n        }\r\n    }\r\n\r\n    // 处理路线错误\r\n    function onRouteError(error) {\r\n        console.error('路线规划失败:', error);\r\n        \r\n        // 提取错误信息\r\n        let errorMessage = '路线规划失败';\r\n        if (error && error.cause) {\r\n            errorMessage += '：' + error.cause;\r\n        }\r\n        \r\n        alert(errorMessage);\r\n    }\r\n}\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}