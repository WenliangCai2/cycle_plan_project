{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiwenliang\\\\Desktop\\\\Course\\\\courseWork\\\\cycle_web\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Map({\n  apikey,\n  selectedLocations,\n  selectedRoute\n}) {\n  _s();\n  useEffect(() => {\n    if (!window.H) {\n      console.error(\"HERE Maps API 未正确加载\");\n      return;\n    }\n    const platform = new window.H.service.Platform({\n      apikey\n    });\n    const defaultLayers = platform.createDefaultLayers();\n    const mapContainer = document.getElementById(\"map-container\");\n    if (!mapContainer) {\n      console.error(\"地图容器未找到\");\n      return;\n    }\n    const map = new window.H.Map(mapContainer, defaultLayers.vector.normal.map, {\n      zoom: 12,\n      center: {\n        lat: 37.7749,\n        lng: -122.4194\n      }\n    });\n\n    // 添加地图交互功能\n    new window.H.mapevents.Behavior(new window.H.mapevents.MapEvents(map));\n    window.addEventListener(\"resize\", () => map.getViewPort().resize());\n\n    // 绘制选中的餐厅标记\n    selectedLocations.forEach(loc => {\n      const marker = new window.H.map.Marker(loc);\n      map.addObject(marker);\n    });\n\n    // 绘制路线\n    if (selectedRoute) {\n      drawRoute(map, platform, selectedRoute.locations);\n    }\n    return () => {\n      map.dispose();\n    };\n  }, [apikey, selectedLocations, selectedRoute]);\n  const drawRoute = (map, platform, locations) => {\n    if (!locations || locations.length < 2) {\n      console.warn(\"路线点不足，无法绘制\");\n      return;\n    }\n    const router = platform.getRoutingService(null, 8);\n    if (!router) {\n      console.error(\"无法获取路由服务\");\n      return;\n    }\n    const routeRequest = {\n      mode: \"fastest;car\",\n      waypoint0: `geo!${locations[0].lat},${locations[0].lng}`,\n      waypoint1: `geo!${locations[locations.length - 1].lat},${locations[locations.length - 1].lng}`,\n      representation: \"display\"\n    };\n    router.calculateRoute(routeRequest, result => {\n      var _result$response;\n      if (result !== null && result !== void 0 && (_result$response = result.response) !== null && _result$response !== void 0 && _result$response.route) {\n        const route = result.response.route[0];\n        const routeShape = route.shape.map(point => {\n          const [lat, lng] = point.split(\",\");\n          return {\n            lat: parseFloat(lat),\n            lng: parseFloat(lng)\n          };\n        });\n        const lineString = new window.H.geo.LineString();\n        routeShape.forEach(point => lineString.pushPoint(point));\n        const routePolyline = new window.H.map.Polyline(lineString, {\n          style: {\n            strokeColor: \"blue\",\n            lineWidth: 4\n          }\n        });\n        map.addObject(routePolyline);\n      } else {\n        console.error(\"无法计算路线\", result);\n      }\n    }, error => {\n      console.error(\"路线计算失败\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map-container\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n}\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Map","apikey","selectedLocations","selectedRoute","_s","window","H","console","error","platform","service","Platform","defaultLayers","createDefaultLayers","mapContainer","document","getElementById","map","vector","normal","zoom","center","lat","lng","mapevents","Behavior","MapEvents","addEventListener","getViewPort","resize","forEach","loc","marker","Marker","addObject","drawRoute","locations","dispose","length","warn","router","getRoutingService","routeRequest","mode","waypoint0","waypoint1","representation","calculateRoute","result","_result$response","response","route","routeShape","shape","point","split","parseFloat","lineString","geo","LineString","pushPoint","routePolyline","Polyline","style","strokeColor","lineWidth","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/caiwenliang/Desktop/Course/courseWork/cycle_web/src/Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction Map({ apikey, selectedLocations, selectedRoute }) {\r\n    useEffect(() => {\r\n        if (!window.H) {\r\n            console.error(\"HERE Maps API 未正确加载\");\r\n            return;\r\n        }\r\n\r\n        const platform = new window.H.service.Platform({ apikey });\r\n        const defaultLayers = platform.createDefaultLayers();\r\n        const mapContainer = document.getElementById(\"map-container\");\r\n\r\n        if (!mapContainer) {\r\n            console.error(\"地图容器未找到\");\r\n            return;\r\n        }\r\n\r\n        const map = new window.H.Map(\r\n            mapContainer,\r\n            defaultLayers.vector.normal.map,\r\n            {\r\n                zoom: 12,\r\n                center: { lat: 37.7749, lng: -122.4194 }\r\n            }\r\n        );\r\n\r\n        // 添加地图交互功能\r\n        new window.H.mapevents.Behavior(new window.H.mapevents.MapEvents(map));\r\n        window.addEventListener(\"resize\", () => map.getViewPort().resize());\r\n\r\n        // 绘制选中的餐厅标记\r\n        selectedLocations.forEach(loc => {\r\n            const marker = new window.H.map.Marker(loc);\r\n            map.addObject(marker);\r\n        });\r\n\r\n        // 绘制路线\r\n        if (selectedRoute) {\r\n            drawRoute(map, platform, selectedRoute.locations);\r\n        }\r\n\r\n        return () => {\r\n            map.dispose();\r\n        };\r\n    }, [apikey, selectedLocations, selectedRoute]);\r\n\r\n    const drawRoute = (map, platform, locations) => {\r\n        if (!locations || locations.length < 2) {\r\n            console.warn(\"路线点不足，无法绘制\");\r\n            return;\r\n        }\r\n\r\n        const router = platform.getRoutingService(null, 8);\r\n        if (!router) {\r\n            console.error(\"无法获取路由服务\");\r\n            return;\r\n        }\r\n\r\n        const routeRequest = {\r\n            mode: \"fastest;car\",\r\n            waypoint0: `geo!${locations[0].lat},${locations[0].lng}`,\r\n            waypoint1: `geo!${locations[locations.length - 1].lat},${locations[locations.length - 1].lng}`,\r\n            representation: \"display\"\r\n        };\r\n\r\n        router.calculateRoute(routeRequest, (result) => {\r\n            if (result?.response?.route) {\r\n                const route = result.response.route[0];\r\n                const routeShape = route.shape.map(point => {\r\n                    const [lat, lng] = point.split(\",\");\r\n                    return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n                });\r\n\r\n                const lineString = new window.H.geo.LineString();\r\n                routeShape.forEach(point => lineString.pushPoint(point));\r\n\r\n                const routePolyline = new window.H.map.Polyline(lineString, {\r\n                    style: { strokeColor: \"blue\", lineWidth: 4 }\r\n                });\r\n\r\n                map.addObject(routePolyline);\r\n            } else {\r\n                console.error(\"无法计算路线\", result);\r\n            }\r\n        }, (error) => {\r\n            console.error(\"路线计算失败\", error);\r\n        });\r\n    };\r\n\r\n    return <div id=\"map-container\" style={{ width: \"100%\", height: \"100%\" }} />;\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}