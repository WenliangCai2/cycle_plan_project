{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiwenliang\\\\PycharmProjects\\\\React-Flask-demo2\\\\frontend\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport H from '@here/maps-api-for-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  _s();\n  const mapRef = useRef(null);\n  const map = useRef(null);\n  const platform = useRef(null);\n  const {\n    apikey,\n    userPosition,\n    selectedLocations,\n    onMapClick,\n    customPoints,\n    restaurantList\n  } = props;\n  useEffect(() => {\n    var _map$current, _map$current2;\n    if (!map.current) {\n      // Initialize map\n      platform.current = new H.service.Platform({\n        apikey\n      });\n      const defaultLayers = platform.current.createDefaultLayers({\n        pois: true\n      });\n      const newMap = new H.Map(mapRef.current, defaultLayers.vector.normal.map, {\n        zoom: 14,\n        center: userPosition // Use dynamic user locations\n      });\n\n      // Add map click event listener\n      newMap.addEventListener('tap', evt => {\n        const coord = newMap.screenToGeo(evt.currentPointer.viewportX, evt.currentPointer.viewportY);\n        console.log('Map clicked:', coord.lat, coord.lng); // 添加日志\n        if (onMapClick) {\n          onMapClick(coord.lat, coord.lng);\n        }\n      });\n      new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\n      H.ui.UI.createDefault(newMap, defaultLayers);\n      map.current = newMap;\n    }\n\n    // Clear all objects on the map\n    (_map$current = map.current) === null || _map$current === void 0 ? void 0 : _map$current.removeObjects(map.current.getObjects());\n\n    // Add user position marker\n    (_map$current2 = map.current) === null || _map$current2 === void 0 ? void 0 : _map$current2.addObject(new H.map.Marker(userPosition, {\n      icon: getMarkerIcon('red') // 用户位置\n    }));\n\n    // Add predefined restaurant markers\n    restaurantList.forEach(restaurant => {\n      var _map$current3;\n      (_map$current3 = map.current) === null || _map$current3 === void 0 ? void 0 : _map$current3.addObject(new H.map.Marker(restaurant.location, {\n        icon: getMarkerIcon('blue') // 事先定义好的点\n      }));\n    });\n\n    // Add custom points markers\n    customPoints.forEach(point => {\n      var _map$current4;\n      (_map$current4 = map.current) === null || _map$current4 === void 0 ? void 0 : _map$current4.addObject(new H.map.Marker(point.location, {\n        icon: getMarkerIcon('purple') // 自定义点\n      }));\n    });\n\n    // Routes are calculated when the selected location changes\n    if (selectedLocations.length > 0) {\n      calculateRoute(platform.current, map.current, userPosition, selectedLocations);\n    }\n  }, [apikey, userPosition, selectedLocations, customPoints, onMapClick, restaurantList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n\n// Get tag icon\n_s(Map, \"xsT/F+AWmDZ03OBlNxNGHBv3aM4=\");\n_c = Map;\nfunction getMarkerIcon(color) {\n  const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"marker\">\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\n                </g></svg>`;\n  return new H.map.Icon(svgCircle, {\n    anchor: {\n      x: 10,\n      y: 10\n    }\n  });\n}\n\n// Calculation route\nfunction calculateRoute(platform, map, start, waypoints) {\n  const router = platform.getRoutingService(null, 8);\n\n  // 处理路线规划请求\n  if (waypoints.length === 0) {\n    console.error('No waypoints provided for route calculation');\n    return;\n  }\n\n  // 基本参数\n  const routingParams = {\n    'transportMode': 'pedestrian',\n    'return': 'polyline'\n  };\n\n  // 处理起点\n  routingParams.origin = `${start.lat},${start.lng}`;\n\n  // 处理终点（最后一个点）\n  routingParams.destination = `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`;\n\n  // 处理中间点（via点）- 修复多路径点格式问题\n  if (waypoints.length > 1) {\n    // 移除最后一个点（终点），只将中间点作为via参数\n    const viaPoints = waypoints.slice(0, -1);\n\n    // 对于每个中间点，添加一个单独的via参数\n    routingParams.via = viaPoints.map(point => `${point.lat},${point.lng}`);\n  }\n  console.log('路线规划参数:', routingParams);\n\n  // 调用路由服务\n  router.calculateRoute(routingParams, response => {\n    if (response.routes && response.routes.length > 0) {\n      const sections = response.routes[0].sections;\n      const lineStrings = sections.map(section => H.geo.LineString.fromFlexiblePolyline(section.polyline));\n      const multiLineString = new H.geo.MultiLineString(lineStrings);\n      const bounds = multiLineString.getBoundingBox();\n\n      // 创建路线折线\n      const routePolyline = new H.map.Polyline(multiLineString, {\n        style: {\n          lineWidth: 5,\n          strokeColor: 'rgba(0, 128, 255, 0.7)'\n        }\n      });\n\n      // 清除地图上的所有对象\n      map.removeObjects(map.getObjects());\n\n      // 添加路线折线\n      map.addObject(routePolyline);\n\n      // 添加标记\n      const markers = [new H.map.Marker(start, {\n        icon: getMarkerIcon('red')\n      }) // 用户位置\n      ];\n      waypoints.forEach((point, index) => {\n        markers.push(new H.map.Marker(point, {\n          icon: getMarkerIcon(index === waypoints.length - 1 ? 'green' : 'blue' // 终点绿色，途径点蓝色\n          )\n        }));\n      });\n\n      // 添加所有标记到地图\n      map.addObjects(markers);\n\n      // 调整地图视角以包含所有标记和路线\n      map.getViewModel().setLookAtData({\n        bounds\n      });\n    } else {\n      console.error('No routes found in the response:', response);\n    }\n  }, error => {\n    console.error('Error calculating route:', error);\n  });\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","H","jsxDEV","_jsxDEV","Map","props","_s","mapRef","map","platform","apikey","userPosition","selectedLocations","onMapClick","customPoints","restaurantList","_map$current","_map$current2","current","service","Platform","defaultLayers","createDefaultLayers","pois","newMap","vector","normal","zoom","center","addEventListener","evt","coord","screenToGeo","currentPointer","viewportX","viewportY","console","log","lat","lng","mapevents","Behavior","MapEvents","ui","UI","createDefault","removeObjects","getObjects","addObject","Marker","icon","getMarkerIcon","forEach","restaurant","_map$current3","location","point","_map$current4","length","calculateRoute","style","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","color","svgCircle","Icon","anchor","x","y","start","waypoints","router","getRoutingService","error","routingParams","origin","destination","viaPoints","slice","via","response","routes","sections","lineStrings","section","geo","LineString","fromFlexiblePolyline","polyline","multiLineString","MultiLineString","bounds","getBoundingBox","routePolyline","Polyline","lineWidth","strokeColor","markers","index","push","addObjects","getViewModel","setLookAtData","$RefreshReg$"],"sources":["C:/Users/caiwenliang/PycharmProjects/React-Flask-demo2/frontend/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport H from '@here/maps-api-for-javascript';\r\n\r\nconst Map = (props) => {\r\n    const mapRef = useRef(null);\r\n    const map = useRef(null);\r\n    const platform = useRef(null);\r\n    const { apikey, userPosition, selectedLocations, onMapClick, customPoints, restaurantList } = props;\r\n\r\n    useEffect(() => {\r\n        if (!map.current) {\r\n            // Initialize map\r\n            platform.current = new H.service.Platform({ apikey });\r\n            const defaultLayers = platform.current.createDefaultLayers({ pois: true });\r\n            const newMap = new H.Map(\r\n                mapRef.current,\r\n                defaultLayers.vector.normal.map,\r\n                {\r\n                    zoom: 14,\r\n                    center: userPosition, // Use dynamic user locations\r\n                }\r\n            );\r\n\r\n            // Add map click event listener\r\n            newMap.addEventListener('tap', (evt) => {\r\n                const coord = newMap.screenToGeo(evt.currentPointer.viewportX, evt.currentPointer.viewportY);\r\n                console.log('Map clicked:', coord.lat, coord.lng); // 添加日志\r\n                if (onMapClick) {\r\n                    onMapClick(coord.lat, coord.lng);\r\n                }\r\n            });\r\n\r\n            new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\r\n            H.ui.UI.createDefault(newMap, defaultLayers);\r\n            map.current = newMap;\r\n        }\r\n\r\n        // Clear all objects on the map\r\n        map.current?.removeObjects(map.current.getObjects());\r\n\r\n        // Add user position marker\r\n        map.current?.addObject(\r\n            new H.map.Marker(userPosition, {\r\n                icon: getMarkerIcon('red') // 用户位置\r\n            })\r\n        );\r\n\r\n        // Add predefined restaurant markers\r\n        restaurantList.forEach(restaurant => {\r\n            map.current?.addObject(\r\n                new H.map.Marker(restaurant.location, {\r\n                    icon: getMarkerIcon('blue') // 事先定义好的点\r\n                })\r\n            );\r\n        });\r\n\r\n        // Add custom points markers\r\n        customPoints.forEach(point => {\r\n            map.current?.addObject(\r\n                new H.map.Marker(point.location, {\r\n                    icon: getMarkerIcon('purple') // 自定义点\r\n                })\r\n            );\r\n        });\r\n\r\n        // Routes are calculated when the selected location changes\r\n        if (selectedLocations.length > 0) {\r\n            calculateRoute(\r\n                platform.current,\r\n                map.current,\r\n                userPosition,\r\n                selectedLocations\r\n            );\r\n        }\r\n    }, [apikey, userPosition, selectedLocations, customPoints, onMapClick, restaurantList]);\r\n\r\n    return <div style={{ width: '100%', height: '500px' }} ref={mapRef} />;\r\n};\r\n\r\n// Get tag icon\r\nfunction getMarkerIcon(color) {\r\n    const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g id=\"marker\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\r\n                </g></svg>`;\r\n    return new H.map.Icon(svgCircle, {\r\n        anchor: { x: 10, y: 10 }\r\n    });\r\n}\r\n\r\n// Calculation route\r\nfunction calculateRoute(platform, map, start, waypoints) {\r\n    const router = platform.getRoutingService(null, 8);\r\n\r\n    // 处理路线规划请求\r\n    if (waypoints.length === 0) {\r\n        console.error('No waypoints provided for route calculation');\r\n        return;\r\n    }\r\n\r\n    // 基本参数\r\n    const routingParams = {\r\n        'transportMode': 'pedestrian',\r\n        'return': 'polyline'\r\n    };\r\n\r\n    // 处理起点\r\n    routingParams.origin = `${start.lat},${start.lng}`;\r\n\r\n    // 处理终点（最后一个点）\r\n    routingParams.destination = `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`;\r\n\r\n    // 处理中间点（via点）- 修复多路径点格式问题\r\n    if (waypoints.length > 1) {\r\n        // 移除最后一个点（终点），只将中间点作为via参数\r\n        const viaPoints = waypoints.slice(0, -1);\r\n        \r\n        // 对于每个中间点，添加一个单独的via参数\r\n        routingParams.via = viaPoints.map(point => `${point.lat},${point.lng}`);\r\n    }\r\n\r\n    console.log('路线规划参数:', routingParams);\r\n\r\n    // 调用路由服务\r\n    router.calculateRoute(routingParams, (response) => {\r\n        if (response.routes && response.routes.length > 0) {\r\n            const sections = response.routes[0].sections;\r\n            const lineStrings = sections.map(section =>\r\n                H.geo.LineString.fromFlexiblePolyline(section.polyline)\r\n            );\r\n            const multiLineString = new H.geo.MultiLineString(lineStrings);\r\n            const bounds = multiLineString.getBoundingBox();\r\n\r\n            // 创建路线折线\r\n            const routePolyline = new H.map.Polyline(multiLineString, {\r\n                style: {\r\n                    lineWidth: 5,\r\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\r\n                }\r\n            });\r\n\r\n            // 清除地图上的所有对象\r\n            map.removeObjects(map.getObjects());\r\n\r\n            // 添加路线折线\r\n            map.addObject(routePolyline);\r\n\r\n            // 添加标记\r\n            const markers = [\r\n                new H.map.Marker(start, { icon: getMarkerIcon('red') }) // 用户位置\r\n            ];\r\n            waypoints.forEach((point, index) => {\r\n                markers.push(\r\n                    new H.map.Marker(point, {\r\n                        icon: getMarkerIcon(\r\n                            index === waypoints.length - 1 ? 'green' : 'blue' // 终点绿色，途径点蓝色\r\n                        )\r\n                    })\r\n                );\r\n            });\r\n\r\n            // 添加所有标记到地图\r\n            map.addObjects(markers);\r\n\r\n            // 调整地图视角以包含所有标记和路线\r\n            map.getViewModel().setLookAtData({ bounds });\r\n        } else {\r\n            console.error('No routes found in the response:', response);\r\n        }\r\n    }, (error) => {\r\n        console.error('Error calculating route:', error);\r\n    });\r\n}\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}