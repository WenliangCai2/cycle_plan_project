{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiwenliang\\\\Desktop\\\\Course\\\\courseWork\\\\cycle_web\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport H from '@here/maps-api-for-javascript';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  _s();\n  const mapRef = useRef(null);\n  const map = useRef(null);\n  const platform = useRef(null);\n  const {\n    apikey,\n    userPosition,\n    selectedLocations\n  } = props;\n  useEffect(() => {\n    if (!map.current) {\n      // 初始化地图\n      platform.current = new H.service.Platform({\n        apikey\n      });\n      const defaultLayers = platform.current.createDefaultLayers({\n        pois: true\n      });\n      const newMap = new H.Map(mapRef.current, defaultLayers.vector.normal.map, {\n        zoom: 14,\n        center: userPosition // 使用动态用户位置\n      });\n      new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\n      H.ui.UI.createDefault(newMap, defaultLayers);\n      map.current = newMap;\n    }\n\n    // 当选中地点变化时计算路线\n    if (selectedLocations.length > 0) {\n      calculateRoute(platform.current, map.current, userPosition, selectedLocations);\n    } else {\n      var _map$current, _map$current2;\n      // 清空地图上的所有对象\n      (_map$current = map.current) === null || _map$current === void 0 ? void 0 : _map$current.removeObjects(map.current.getObjects());\n      // 添加默认用户位置标记\n      (_map$current2 = map.current) === null || _map$current2 === void 0 ? void 0 : _map$current2.addObject(new H.map.Marker(userPosition, {\n        icon: getMarkerIcon('red')\n      }));\n    }\n  }, [apikey, userPosition, selectedLocations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n// 获取标记图标\n_s(Map, \"xsT/F+AWmDZ03OBlNxNGHBv3aM4=\");\n_c = Map;\nfunction getMarkerIcon(color) {\n  const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"marker\">\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\n                </g></svg>`;\n  return new H.map.Icon(svgCircle, {\n    anchor: {\n      x: 10,\n      y: 10\n    }\n  });\n}\n\n// 计算路线\n// Map.js 中的 calculateRoute 函数\nfunction calculateRoute(platform, map, start, waypoints) {\n  const router = platform.getRoutingService(null, 8);\n  const routingParams = {\n    origin: `${start.lat},${start.lng}`,\n    destination: `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`,\n    transportMode: 'car',\n    // 使用驾车模式\n    via: waypoints.slice(0, -1).map(p => `${p.lat},${p.lng}`).join('!'),\n    return: 'polyline'\n  };\n  router.calculateRoute(routingParams, response => {\n    const sections = response.routes[0].sections;\n    const lineStrings = sections.map(section => H.geo.LineString.fromFlexiblePolyline(section.polyline));\n    const multiLineString = new H.geo.MultiLineString(lineStrings);\n    const routePolyline = new H.map.Polyline(multiLineString, {\n      style: {\n        lineWidth: 5,\n        strokeColor: 'rgba(0, 128, 255, 0.7)'\n      }\n    });\n    map.removeObjects(map.getObjects());\n    map.addObject(routePolyline);\n\n    // 添加标记\n    map.addObjects([new H.map.Marker(start, {\n      icon: getMarkerIcon('red')\n    }), ...waypoints.map((point, i) => new H.map.Marker(point, {\n      icon: getMarkerIcon(i === waypoints.length - 1 ? 'green' : 'blue')\n    }))]);\n  }, error => {\n    console.error('路由错误:', error);\n  });\n}\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","H","jsxDEV","_jsxDEV","Map","props","_s","mapRef","map","platform","apikey","userPosition","selectedLocations","current","service","Platform","defaultLayers","createDefaultLayers","pois","newMap","vector","normal","zoom","center","mapevents","Behavior","MapEvents","ui","UI","createDefault","length","calculateRoute","_map$current","_map$current2","removeObjects","getObjects","addObject","Marker","icon","getMarkerIcon","style","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","color","svgCircle","Icon","anchor","x","y","start","waypoints","router","getRoutingService","routingParams","origin","lat","lng","destination","transportMode","via","slice","p","join","return","response","sections","routes","lineStrings","section","geo","LineString","fromFlexiblePolyline","polyline","multiLineString","MultiLineString","routePolyline","Polyline","lineWidth","strokeColor","addObjects","point","i","error","console","$RefreshReg$"],"sources":["C:/Users/caiwenliang/Desktop/Course/courseWork/cycle_web/src/Map.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport H from '@here/maps-api-for-javascript';\r\n\r\nconst Map = (props) => {\r\n    const mapRef = useRef(null);\r\n    const map = useRef(null);\r\n    const platform = useRef(null);\r\n    const { apikey, userPosition, selectedLocations } = props;\r\n\r\n    useEffect(() => {\r\n        if (!map.current) {\r\n            // 初始化地图\r\n            platform.current = new H.service.Platform({ apikey });\r\n            const defaultLayers = platform.current.createDefaultLayers({ pois: true });\r\n            const newMap = new H.Map(\r\n                mapRef.current,\r\n                defaultLayers.vector.normal.map,\r\n                {\r\n                    zoom: 14,\r\n                    center: userPosition, // 使用动态用户位置\r\n                }\r\n            );\r\n\r\n            new H.mapevents.Behavior(new H.mapevents.MapEvents(newMap));\r\n            H.ui.UI.createDefault(newMap, defaultLayers);\r\n            map.current = newMap;\r\n        }\r\n\r\n        // 当选中地点变化时计算路线\r\n        if (selectedLocations.length > 0) {\r\n            calculateRoute(\r\n                platform.current,\r\n                map.current,\r\n                userPosition,\r\n                selectedLocations\r\n            );\r\n        } else {\r\n            // 清空地图上的所有对象\r\n            map.current?.removeObjects(map.current.getObjects());\r\n            // 添加默认用户位置标记\r\n            map.current?.addObject(\r\n                new H.map.Marker(userPosition, {\r\n                    icon: getMarkerIcon('red')\r\n                })\r\n            );\r\n        }\r\n    }, [apikey, userPosition, selectedLocations]);\r\n\r\n    return <div style={{ width: '100%', height: '500px' }} ref={mapRef} />;\r\n};\r\n\r\n// 获取标记图标\r\nfunction getMarkerIcon(color) {\r\n    const svgCircle = `<svg width=\"20\" height=\"20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g id=\"marker\">\r\n                <circle cx=\"10\" cy=\"10\" r=\"7\" fill=\"${color}\" stroke=\"${color}\" stroke-width=\"4\" />\r\n                </g></svg>`;\r\n    return new H.map.Icon(svgCircle, {\r\n        anchor: { x: 10, y: 10 }\r\n    });\r\n}\r\n\r\n// 计算路线\r\n// Map.js 中的 calculateRoute 函数\r\nfunction calculateRoute(platform, map, start, waypoints) {\r\n    const router = platform.getRoutingService(null, 8);\r\n    const routingParams = {\r\n        origin: `${start.lat},${start.lng}`,\r\n        destination: `${waypoints[waypoints.length - 1].lat},${waypoints[waypoints.length - 1].lng}`,\r\n        transportMode: 'car', // 使用驾车模式\r\n        via: waypoints\r\n            .slice(0, -1)\r\n            .map(p => `${p.lat},${p.lng}`)\r\n            .join('!'),\r\n        return: 'polyline'\r\n    };\r\n\r\n    router.calculateRoute(routingParams, (response) => {\r\n        const sections = response.routes[0].sections;\r\n        const lineStrings = sections.map(section =>\r\n            H.geo.LineString.fromFlexiblePolyline(section.polyline)\r\n        );\r\n        const multiLineString = new H.geo.MultiLineString(lineStrings);\r\n        const routePolyline = new H.map.Polyline(multiLineString, {\r\n            style: { lineWidth: 5, strokeColor: 'rgba(0, 128, 255, 0.7)' }\r\n        });\r\n\r\n        map.removeObjects(map.getObjects());\r\n        map.addObject(routePolyline);\r\n\r\n        // 添加标记\r\n        map.addObjects([\r\n            new H.map.Marker(start, { icon: getMarkerIcon('red') }),\r\n            ...waypoints.map((point, i) =>\r\n                new H.map.Marker(point, {\r\n                    icon: getMarkerIcon(i === waypoints.length - 1 ? 'green' : 'blue')\r\n                })\r\n            )\r\n        ]);\r\n    }, (error) => {\r\n        console.error('路由错误:', error);\r\n    });\r\n}\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}